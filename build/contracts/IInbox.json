{
  "contractName": "IInbox",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "messageNum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "InboxMessageDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "messageNum",
          "type": "uint256"
        }
      ],
      "name": "InboxMessageDeliveredFromOrigin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "contract IBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sequencerInbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "messageData",
          "type": "bytes"
        }
      ],
      "name": "sendL2MessageFromOrigin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "messageData",
          "type": "bytes"
        }
      ],
      "name": "sendL2Message",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sendL1FundedUnsignedTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sendL1FundedContractTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sendUnsignedTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sendContractTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseFee",
          "type": "uint256"
        }
      ],
      "name": "calculateRetryableSubmissionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "l2CallValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSubmissionCost",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "excessFeeRefundAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callValueRefundAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "createRetryableTicket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "l2CallValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSubmissionCost",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "excessFeeRefundAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callValueRefundAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "unsafeCreateRetryableTicket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBridge",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "postUpgradeInit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBridge",
          "name": "_bridge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sequencerInbox",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"messageNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InboxMessageDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"messageNum\",\"type\":\"uint256\"}],\"name\":\"InboxMessageDeliveredFromOrigin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"contract IBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"calculateRetryableSubmissionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"l2CallValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSubmissionCost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"excessFeeRefundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callValueRefundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createRetryableTicket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBridge\",\"name\":\"_bridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sequencerInbox\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBridge\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"postUpgradeInit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendContractTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendL1FundedContractTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendL1FundedUnsignedTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"sendL2Message\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"sendL2MessageFromOrigin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendUnsignedTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerInbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"l2CallValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSubmissionCost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"excessFeeRefundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callValueRefundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unsafeCreateRetryableTicket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"InboxMessageDelivered(uint256,bytes)\":{\"details\":\"event emitted when a inbox message is added to the Bridge's delayed accumulator\"},\"InboxMessageDeliveredFromOrigin(uint256)\":{\"details\":\"event emitted when a inbox message is added to the Bridge's delayed accumulator same as InboxMessageDelivered but the batch data is available in tx.input\"}},\"kind\":\"dev\",\"methods\":{\"calculateRetryableSubmissionFee(uint256,uint256)\":{\"details\":\"This fee can be paid by funds already in the L2 aliased address or by the current message valueThis formula may change in the future, to future proof your code query this method instead of inlining!!\",\"params\":{\"baseFee\":\"The block basefee when the retryable is included in the chain, if 0 current block.basefee will be used\",\"dataLength\":\"The length of the retryable's calldata, in bytes\"}},\"createRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)\":{\"details\":\"all msg.value will deposited to callValueRefundAddress on L2Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error\",\"params\":{\"callValueRefundAddress\":\"l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled\",\"data\":\"ABI encoded data of L2 message\",\"excessFeeRefundAddress\":\"gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance\",\"gasLimit\":\"Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\",\"l2CallValue\":\"call value for retryable L2 message\",\"maxFeePerGas\":\"price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\",\"maxSubmissionCost\":\"Max gas deducted from user's L2 balance to cover base submission fee\",\"to\":\"destination L2 contract address\"},\"returns\":{\"_0\":\"unique message number of the retryable transaction\"}},\"depositEth()\":{\"details\":\"This does not trigger the fallback function when receiving in the L2 side.      Look into retryable tickets if you are interested in this functionality.This function should not be called inside contract constructors\"},\"postUpgradeInit(address)\":{\"details\":\"function to be called one time during the inbox upgrade process      this is used to fix the storage slots\"},\"sendL2Message(bytes)\":{\"details\":\"This method can be used to send any type of message that doesn't require L1 validation\",\"params\":{\"messageData\":\"Data of the message being sent\"}},\"sendL2MessageFromOrigin(bytes)\":{\"details\":\"This method is an optimization to avoid having to emit the entirety of the messageData in a log. Instead validators are expected to be able to parse the data from the transaction's input\",\"params\":{\"messageData\":\"Data of the message being sent\"}},\"unsafeCreateRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)\":{\"details\":\"Same as createRetryableTicket, but does not guarantee that submission will succeed by requiring the needed funds come from the deposit alone, rather than falling back on the user's L2 balanceAdvanced usage only (does not rewrite aliases for excessFeeRefundAddress and callValueRefundAddress). createRetryableTicket method is the recommended standard.Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error\",\"params\":{\"callValueRefundAddress\":\"l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled\",\"data\":\"ABI encoded data of L2 message\",\"excessFeeRefundAddress\":\"gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance\",\"gasLimit\":\"Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\",\"l2CallValue\":\"call value for retryable L2 message\",\"maxFeePerGas\":\"price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\",\"maxSubmissionCost\":\"Max gas deducted from user's L2 balance to cover base submission fee\",\"to\":\"destination L2 contract address\"},\"returns\":{\"_0\":\"unique message number of the retryable transaction\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateRetryableSubmissionFee(uint256,uint256)\":{\"notice\":\"Get the L1 fee for submitting a retryable\"},\"createRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts\"},\"depositEth()\":{\"notice\":\"Deposit eth from L1 to L2 to address of the sender if sender is an EOA, and to its aliased address if the sender is a contract\"},\"pause()\":{\"notice\":\"pauses all inbox functionality\"},\"sendL2Message(bytes)\":{\"notice\":\"Send a generic L2 message to the chain\"},\"sendL2MessageFromOrigin(bytes)\":{\"notice\":\"Send a generic L2 message to the chain\"},\"unpause()\":{\"notice\":\"unpauses all inbox functionality\"},\"unsafeCreateRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IInbox.sol\":\"IInbox\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IBridge.sol\":{\"keccak256\":\"0xe1e854715c581bfa526f35e4f76579f6b66dc0799d3221c530ded139c3370807\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://91e16564ebee6c34ef04f0567ccc726f5c3750a85de9f18eb678e768be68ff1f\",\"dweb:/ipfs/QmRXx3S9XqXGnbcF65VyxSUC4LsWn2TQdQqN7ZCfDSeMUf\"]},\"project:/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IDelayedMessageProvider.sol\":{\"keccak256\":\"0xccec6fc7eac1151017a785c98f4d3d13d90c19b87a9ec1e8955245ba98f3e19b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c823dbf6495801b10bb720e10a31c191f9404478f6ac2993d6314f5067f8d0ea\",\"dweb:/ipfs/QmSyCRiPjqouJ84U2cmeo7nddsuW5LpfWR3qDQiAP63S2w\"]},\"project:/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IInbox.sol\":{\"keccak256\":\"0xecfd5a7ee81dbe73dccc19db52fdde940dcb19deaeb39424c32a01d1907149ec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1071a46c4100717e17395aa276c18b3ee61f6ffe785505630ff1dd21d83334f0\",\"dweb:/ipfs/QmaF9hvzRu3vJb2dh2DBZAS2QPMAjmtmbHaVGtZqx7KHdx\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// Copyright 2021-2022, Offchain Labs, Inc.\n// For license information, see https://github.com/nitro/blob/master/LICENSE\n// SPDX-License-Identifier: BUSL-1.1\n// OpenZeppelin Contracts (last updated v4.8.0) (vendor/arbitrum/IInbox.sol)\n\n// solhint-disable-next-line compiler-version\npragma solidity >=0.6.9 <0.9.0;\n\nimport \"./IBridge.sol\";\nimport \"./IDelayedMessageProvider.sol\";\n\ninterface IInbox is IDelayedMessageProvider {\n    function bridge() external view returns (IBridge);\n\n    // OpenZeppelin: changed return type from ISequencerInbox\n    function sequencerInbox() external view returns (address);\n\n    /**\n     * @notice Send a generic L2 message to the chain\n     * @dev This method is an optimization to avoid having to emit the entirety of the messageData in a log. Instead validators are expected to be able to parse the data from the transaction's input\n     * @param messageData Data of the message being sent\n     */\n    function sendL2MessageFromOrigin(bytes calldata messageData) external returns (uint256);\n\n    /**\n     * @notice Send a generic L2 message to the chain\n     * @dev This method can be used to send any type of message that doesn't require L1 validation\n     * @param messageData Data of the message being sent\n     */\n    function sendL2Message(bytes calldata messageData) external returns (uint256);\n\n    function sendL1FundedUnsignedTransaction(\n        uint256 gasLimit,\n        uint256 maxFeePerGas,\n        uint256 nonce,\n        address to,\n        bytes calldata data\n    ) external payable returns (uint256);\n\n    function sendL1FundedContractTransaction(\n        uint256 gasLimit,\n        uint256 maxFeePerGas,\n        address to,\n        bytes calldata data\n    ) external payable returns (uint256);\n\n    function sendUnsignedTransaction(\n        uint256 gasLimit,\n        uint256 maxFeePerGas,\n        uint256 nonce,\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external returns (uint256);\n\n    function sendContractTransaction(\n        uint256 gasLimit,\n        uint256 maxFeePerGas,\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external returns (uint256);\n\n    /**\n     * @notice Get the L1 fee for submitting a retryable\n     * @dev This fee can be paid by funds already in the L2 aliased address or by the current message value\n     * @dev This formula may change in the future, to future proof your code query this method instead of inlining!!\n     * @param dataLength The length of the retryable's calldata, in bytes\n     * @param baseFee The block basefee when the retryable is included in the chain, if 0 current block.basefee will be used\n     */\n    function calculateRetryableSubmissionFee(uint256 dataLength, uint256 baseFee) external view returns (uint256);\n\n    /**\n     * @notice Deposit eth from L1 to L2 to address of the sender if sender is an EOA, and to its aliased address if the sender is a contract\n     * @dev This does not trigger the fallback function when receiving in the L2 side.\n     *      Look into retryable tickets if you are interested in this functionality.\n     * @dev This function should not be called inside contract constructors\n     */\n    function depositEth() external payable returns (uint256);\n\n    /**\n     * @notice Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts\n     * @dev all msg.value will deposited to callValueRefundAddress on L2\n     * @dev Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error\n     * @param to destination L2 contract address\n     * @param l2CallValue call value for retryable L2 message\n     * @param maxSubmissionCost Max gas deducted from user's L2 balance to cover base submission fee\n     * @param excessFeeRefundAddress gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance\n     * @param callValueRefundAddress l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled\n     * @param gasLimit Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n     * @param maxFeePerGas price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n     * @param data ABI encoded data of L2 message\n     * @return unique message number of the retryable transaction\n     */\n    function createRetryableTicket(\n        address to,\n        uint256 l2CallValue,\n        uint256 maxSubmissionCost,\n        address excessFeeRefundAddress,\n        address callValueRefundAddress,\n        uint256 gasLimit,\n        uint256 maxFeePerGas,\n        bytes calldata data\n    ) external payable returns (uint256);\n\n    /**\n     * @notice Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts\n     * @dev Same as createRetryableTicket, but does not guarantee that submission will succeed by requiring the needed funds\n     * come from the deposit alone, rather than falling back on the user's L2 balance\n     * @dev Advanced usage only (does not rewrite aliases for excessFeeRefundAddress and callValueRefundAddress).\n     * createRetryableTicket method is the recommended standard.\n     * @dev Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error\n     * @param to destination L2 contract address\n     * @param l2CallValue call value for retryable L2 message\n     * @param maxSubmissionCost Max gas deducted from user's L2 balance to cover base submission fee\n     * @param excessFeeRefundAddress gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance\n     * @param callValueRefundAddress l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled\n     * @param gasLimit Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n     * @param maxFeePerGas price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n     * @param data ABI encoded data of L2 message\n     * @return unique message number of the retryable transaction\n     */\n    function unsafeCreateRetryableTicket(\n        address to,\n        uint256 l2CallValue,\n        uint256 maxSubmissionCost,\n        address excessFeeRefundAddress,\n        address callValueRefundAddress,\n        uint256 gasLimit,\n        uint256 maxFeePerGas,\n        bytes calldata data\n    ) external payable returns (uint256);\n\n    // ---------- onlyRollupOrOwner functions ----------\n\n    /// @notice pauses all inbox functionality\n    function pause() external;\n\n    /// @notice unpauses all inbox functionality\n    function unpause() external;\n\n    // ---------- initializer ----------\n\n    /**\n     * @dev function to be called one time during the inbox upgrade process\n     *      this is used to fix the storage slots\n     */\n    function postUpgradeInit(IBridge _bridge) external;\n\n    // OpenZeppelin: changed _sequencerInbox type from ISequencerInbox\n    function initialize(IBridge _bridge, address _sequencerInbox) external;\n}\n",
  "sourcePath": "/Volumes/2nd-HD/github/starlink/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IInbox.sol",
  "ast": {
    "absolutePath": "project:/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IInbox.sol",
    "exportedSymbols": {
      "IBridge": [
        40758
      ],
      "IDelayedMessageProvider": [
        40773
      ],
      "IInbox": [
        40950
      ]
    },
    "id": 40951,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 40775,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".9",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "282:31:589"
      },
      {
        "absolutePath": "project:/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IBridge.sol",
        "file": "./IBridge.sol",
        "id": 40776,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 40951,
        "sourceUnit": 40759,
        "src": "315:23:589",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/node_modules/@openzeppelin/contracts/vendor/arbitrum/IDelayedMessageProvider.sol",
        "file": "./IDelayedMessageProvider.sol",
        "id": 40777,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 40951,
        "sourceUnit": 40774,
        "src": "339:39:589",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40778,
              "name": "IDelayedMessageProvider",
              "nameLocations": [
                "400:23:589"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40773,
              "src": "400:23:589"
            },
            "id": 40779,
            "nodeType": "InheritanceSpecifier",
            "src": "400:23:589"
          }
        ],
        "canonicalName": "IInbox",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 40950,
        "linearizedBaseContracts": [
          40950,
          40773
        ],
        "name": "IInbox",
        "nameLocation": "390:6:589",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "e78cea92",
            "id": 40785,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bridge",
            "nameLocation": "439:6:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:2:589"
            },
            "returnParameters": {
              "id": 40784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40783,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40785,
                  "src": "471:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBridge_$40758",
                    "typeString": "contract IBridge"
                  },
                  "typeName": {
                    "id": 40782,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40781,
                      "name": "IBridge",
                      "nameLocations": [
                        "471:7:589"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40758,
                      "src": "471:7:589"
                    },
                    "referencedDeclaration": 40758,
                    "src": "471:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBridge_$40758",
                      "typeString": "contract IBridge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:9:589"
            },
            "scope": 40950,
            "src": "430:50:589",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "ee35f327",
            "id": 40790,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sequencerInbox",
            "nameLocation": "557:14:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:2:589"
            },
            "returnParameters": {
              "id": 40789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40790,
                  "src": "597:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:9:589"
            },
            "scope": 40950,
            "src": "548:58:589",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40791,
              "nodeType": "StructuredDocumentation",
              "src": "612:321:589",
              "text": " @notice Send a generic L2 message to the chain\n @dev This method is an optimization to avoid having to emit the entirety of the messageData in a log. Instead validators are expected to be able to parse the data from the transaction's input\n @param messageData Data of the message being sent"
            },
            "functionSelector": "1fe927cf",
            "id": 40798,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendL2MessageFromOrigin",
            "nameLocation": "947:23:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40793,
                  "mutability": "mutable",
                  "name": "messageData",
                  "nameLocation": "986:11:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40798,
                  "src": "971:26:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40792,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "970:28:589"
            },
            "returnParameters": {
              "id": 40797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40796,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40798,
                  "src": "1017:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1017:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1016:9:589"
            },
            "scope": 40950,
            "src": "938:88:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40799,
              "nodeType": "StructuredDocumentation",
              "src": "1032:221:589",
              "text": " @notice Send a generic L2 message to the chain\n @dev This method can be used to send any type of message that doesn't require L1 validation\n @param messageData Data of the message being sent"
            },
            "functionSelector": "b75436bb",
            "id": 40806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendL2Message",
            "nameLocation": "1267:13:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40801,
                  "mutability": "mutable",
                  "name": "messageData",
                  "nameLocation": "1296:11:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40806,
                  "src": "1281:26:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40800,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1280:28:589"
            },
            "returnParameters": {
              "id": 40805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40806,
                  "src": "1327:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1326:9:589"
            },
            "scope": 40950,
            "src": "1258:78:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "67ef3ab8",
            "id": 40821,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendL1FundedUnsignedTransaction",
            "nameLocation": "1351:31:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40808,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "1400:8:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40821,
                  "src": "1392:16:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40810,
                  "mutability": "mutable",
                  "name": "maxFeePerGas",
                  "nameLocation": "1426:12:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40821,
                  "src": "1418:20:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40812,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1456:5:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40821,
                  "src": "1448:13:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40814,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1479:2:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40821,
                  "src": "1471:10:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40816,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1506:4:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40821,
                  "src": "1491:19:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40815,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:134:589"
            },
            "returnParameters": {
              "id": 40820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40821,
                  "src": "1543:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1542:9:589"
            },
            "scope": 40950,
            "src": "1342:210:589",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "5e916758",
            "id": 40834,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendL1FundedContractTransaction",
            "nameLocation": "1567:31:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40823,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "1616:8:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40834,
                  "src": "1608:16:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40825,
                  "mutability": "mutable",
                  "name": "maxFeePerGas",
                  "nameLocation": "1642:12:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40834,
                  "src": "1634:20:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40827,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1672:2:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40834,
                  "src": "1664:10:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40829,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1699:4:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40834,
                  "src": "1684:19:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40828,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1598:111:589"
            },
            "returnParameters": {
              "id": 40833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40834,
                  "src": "1736:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:9:589"
            },
            "scope": 40950,
            "src": "1558:187:589",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "5075788b",
            "id": 40851,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendUnsignedTransaction",
            "nameLocation": "1760:23:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40836,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "1801:8:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40851,
                  "src": "1793:16:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40838,
                  "mutability": "mutable",
                  "name": "maxFeePerGas",
                  "nameLocation": "1827:12:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40851,
                  "src": "1819:20:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40840,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1857:5:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40851,
                  "src": "1849:13:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40842,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1880:2:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40851,
                  "src": "1872:10:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40844,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1900:5:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40851,
                  "src": "1892:13:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40846,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1930:4:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40851,
                  "src": "1915:19:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40845,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1783:157:589"
            },
            "returnParameters": {
              "id": 40850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40851,
                  "src": "1959:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1958:9:589"
            },
            "scope": 40950,
            "src": "1751:217:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "8a631aa6",
            "id": 40866,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendContractTransaction",
            "nameLocation": "1983:23:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40853,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "2024:8:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40866,
                  "src": "2016:16:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2016:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40855,
                  "mutability": "mutable",
                  "name": "maxFeePerGas",
                  "nameLocation": "2050:12:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40866,
                  "src": "2042:20:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40857,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2080:2:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40866,
                  "src": "2072:10:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40859,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2100:5:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40866,
                  "src": "2092:13:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40861,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2130:4:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40866,
                  "src": "2115:19:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40860,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2006:134:589"
            },
            "returnParameters": {
              "id": 40865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40866,
                  "src": "2159:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2158:9:589"
            },
            "scope": 40950,
            "src": "1974:194:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40867,
              "nodeType": "StructuredDocumentation",
              "src": "2174:492:589",
              "text": " @notice Get the L1 fee for submitting a retryable\n @dev This fee can be paid by funds already in the L2 aliased address or by the current message value\n @dev This formula may change in the future, to future proof your code query this method instead of inlining!!\n @param dataLength The length of the retryable's calldata, in bytes\n @param baseFee The block basefee when the retryable is included in the chain, if 0 current block.basefee will be used"
            },
            "functionSelector": "a66b327d",
            "id": 40876,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRetryableSubmissionFee",
            "nameLocation": "2680:31:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40869,
                  "mutability": "mutable",
                  "name": "dataLength",
                  "nameLocation": "2720:10:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40876,
                  "src": "2712:18:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2712:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40871,
                  "mutability": "mutable",
                  "name": "baseFee",
                  "nameLocation": "2740:7:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40876,
                  "src": "2732:15:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2711:37:589"
            },
            "returnParameters": {
              "id": 40875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40876,
                  "src": "2772:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2771:9:589"
            },
            "scope": 40950,
            "src": "2671:110:589",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40877,
              "nodeType": "StructuredDocumentation",
              "src": "2787:401:589",
              "text": " @notice Deposit eth from L1 to L2 to address of the sender if sender is an EOA, and to its aliased address if the sender is a contract\n @dev This does not trigger the fallback function when receiving in the L2 side.\n      Look into retryable tickets if you are interested in this functionality.\n @dev This function should not be called inside contract constructors"
            },
            "functionSelector": "439370b1",
            "id": 40882,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositEth",
            "nameLocation": "3202:10:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3212:2:589"
            },
            "returnParameters": {
              "id": 40881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40882,
                  "src": "3241:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3240:9:589"
            },
            "scope": 40950,
            "src": "3193:57:589",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40883,
              "nodeType": "StructuredDocumentation",
              "src": "3256:1162:589",
              "text": " @notice Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts\n @dev all msg.value will deposited to callValueRefundAddress on L2\n @dev Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error\n @param to destination L2 contract address\n @param l2CallValue call value for retryable L2 message\n @param maxSubmissionCost Max gas deducted from user's L2 balance to cover base submission fee\n @param excessFeeRefundAddress gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance\n @param callValueRefundAddress l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled\n @param gasLimit Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n @param maxFeePerGas price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n @param data ABI encoded data of L2 message\n @return unique message number of the retryable transaction"
            },
            "functionSelector": "679b6ded",
            "id": 40904,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createRetryableTicket",
            "nameLocation": "4432:21:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40885,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4471:2:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4463:10:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40887,
                  "mutability": "mutable",
                  "name": "l2CallValue",
                  "nameLocation": "4491:11:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4483:19:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4483:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40889,
                  "mutability": "mutable",
                  "name": "maxSubmissionCost",
                  "nameLocation": "4520:17:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4512:25:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4512:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40891,
                  "mutability": "mutable",
                  "name": "excessFeeRefundAddress",
                  "nameLocation": "4555:22:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4547:30:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4547:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40893,
                  "mutability": "mutable",
                  "name": "callValueRefundAddress",
                  "nameLocation": "4595:22:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4587:30:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4587:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40895,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "4635:8:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4627:16:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40897,
                  "mutability": "mutable",
                  "name": "maxFeePerGas",
                  "nameLocation": "4661:12:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4653:20:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4653:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40899,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4698:4:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4683:19:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40898,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4453:255:589"
            },
            "returnParameters": {
              "id": 40903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40904,
                  "src": "4735:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4735:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4734:9:589"
            },
            "scope": 40950,
            "src": "4423:321:589",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40905,
              "nodeType": "StructuredDocumentation",
              "src": "4750:1479:589",
              "text": " @notice Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts\n @dev Same as createRetryableTicket, but does not guarantee that submission will succeed by requiring the needed funds\n come from the deposit alone, rather than falling back on the user's L2 balance\n @dev Advanced usage only (does not rewrite aliases for excessFeeRefundAddress and callValueRefundAddress).\n createRetryableTicket method is the recommended standard.\n @dev Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error\n @param to destination L2 contract address\n @param l2CallValue call value for retryable L2 message\n @param maxSubmissionCost Max gas deducted from user's L2 balance to cover base submission fee\n @param excessFeeRefundAddress gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance\n @param callValueRefundAddress l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled\n @param gasLimit Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n @param maxFeePerGas price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)\n @param data ABI encoded data of L2 message\n @return unique message number of the retryable transaction"
            },
            "functionSelector": "6e6e8a6a",
            "id": 40926,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unsafeCreateRetryableTicket",
            "nameLocation": "6243:27:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40907,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6288:2:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6280:10:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6280:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40909,
                  "mutability": "mutable",
                  "name": "l2CallValue",
                  "nameLocation": "6308:11:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6300:19:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6300:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40911,
                  "mutability": "mutable",
                  "name": "maxSubmissionCost",
                  "nameLocation": "6337:17:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6329:25:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6329:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40913,
                  "mutability": "mutable",
                  "name": "excessFeeRefundAddress",
                  "nameLocation": "6372:22:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6364:30:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6364:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40915,
                  "mutability": "mutable",
                  "name": "callValueRefundAddress",
                  "nameLocation": "6412:22:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6404:30:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6404:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40917,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "6452:8:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6444:16:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6444:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40919,
                  "mutability": "mutable",
                  "name": "maxFeePerGas",
                  "nameLocation": "6478:12:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6470:20:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6470:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40921,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6515:4:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6500:19:589",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40920,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:5:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6270:255:589"
            },
            "returnParameters": {
              "id": 40925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40926,
                  "src": "6552:7:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6552:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6551:9:589"
            },
            "scope": 40950,
            "src": "6234:327:589",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40927,
              "nodeType": "StructuredDocumentation",
              "src": "6625:42:589",
              "text": "@notice pauses all inbox functionality"
            },
            "functionSelector": "8456cb59",
            "id": 40930,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "6681:5:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6686:2:589"
            },
            "returnParameters": {
              "id": 40929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6697:0:589"
            },
            "scope": 40950,
            "src": "6672:26:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40931,
              "nodeType": "StructuredDocumentation",
              "src": "6704:44:589",
              "text": "@notice unpauses all inbox functionality"
            },
            "functionSelector": "3f4ba83a",
            "id": 40934,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "6762:7:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6769:2:589"
            },
            "returnParameters": {
              "id": 40933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6780:0:589"
            },
            "scope": 40950,
            "src": "6753:28:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40935,
              "nodeType": "StructuredDocumentation",
              "src": "6829:137:589",
              "text": " @dev function to be called one time during the inbox upgrade process\n      this is used to fix the storage slots"
            },
            "functionSelector": "c474d2c5",
            "id": 40941,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "postUpgradeInit",
            "nameLocation": "6980:15:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40938,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nameLocation": "7004:7:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40941,
                  "src": "6996:15:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBridge_$40758",
                    "typeString": "contract IBridge"
                  },
                  "typeName": {
                    "id": 40937,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40936,
                      "name": "IBridge",
                      "nameLocations": [
                        "6996:7:589"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40758,
                      "src": "6996:7:589"
                    },
                    "referencedDeclaration": 40758,
                    "src": "6996:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBridge_$40758",
                      "typeString": "contract IBridge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6995:17:589"
            },
            "returnParameters": {
              "id": 40940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7021:0:589"
            },
            "scope": 40950,
            "src": "6971:51:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "485cc955",
            "id": 40949,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "7108:10:589",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40944,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nameLocation": "7127:7:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40949,
                  "src": "7119:15:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBridge_$40758",
                    "typeString": "contract IBridge"
                  },
                  "typeName": {
                    "id": 40943,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40942,
                      "name": "IBridge",
                      "nameLocations": [
                        "7119:7:589"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40758,
                      "src": "7119:7:589"
                    },
                    "referencedDeclaration": 40758,
                    "src": "7119:7:589",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBridge_$40758",
                      "typeString": "contract IBridge"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40946,
                  "mutability": "mutable",
                  "name": "_sequencerInbox",
                  "nameLocation": "7144:15:589",
                  "nodeType": "VariableDeclaration",
                  "scope": 40949,
                  "src": "7136:23:589",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7136:7:589",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7118:42:589"
            },
            "returnParameters": {
              "id": 40948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7169:0:589"
            },
            "scope": 40950,
            "src": "7099:71:589",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 40951,
        "src": "380:6792:589",
        "usedErrors": [],
        "usedEvents": [
          40767,
          40772
        ]
      }
    ],
    "src": "282:6891:589"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-09-14T12:28:56.156Z",
  "devdoc": {
    "events": {
      "InboxMessageDelivered(uint256,bytes)": {
        "details": "event emitted when a inbox message is added to the Bridge's delayed accumulator"
      },
      "InboxMessageDeliveredFromOrigin(uint256)": {
        "details": "event emitted when a inbox message is added to the Bridge's delayed accumulator same as InboxMessageDelivered but the batch data is available in tx.input"
      }
    },
    "kind": "dev",
    "methods": {
      "calculateRetryableSubmissionFee(uint256,uint256)": {
        "details": "This fee can be paid by funds already in the L2 aliased address or by the current message valueThis formula may change in the future, to future proof your code query this method instead of inlining!!",
        "params": {
          "baseFee": "The block basefee when the retryable is included in the chain, if 0 current block.basefee will be used",
          "dataLength": "The length of the retryable's calldata, in bytes"
        }
      },
      "createRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)": {
        "details": "all msg.value will deposited to callValueRefundAddress on L2Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error",
        "params": {
          "callValueRefundAddress": "l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled",
          "data": "ABI encoded data of L2 message",
          "excessFeeRefundAddress": "gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance",
          "gasLimit": "Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)",
          "l2CallValue": "call value for retryable L2 message",
          "maxFeePerGas": "price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)",
          "maxSubmissionCost": "Max gas deducted from user's L2 balance to cover base submission fee",
          "to": "destination L2 contract address"
        },
        "returns": {
          "_0": "unique message number of the retryable transaction"
        }
      },
      "depositEth()": {
        "details": "This does not trigger the fallback function when receiving in the L2 side.      Look into retryable tickets if you are interested in this functionality.This function should not be called inside contract constructors"
      },
      "postUpgradeInit(address)": {
        "details": "function to be called one time during the inbox upgrade process      this is used to fix the storage slots"
      },
      "sendL2Message(bytes)": {
        "details": "This method can be used to send any type of message that doesn't require L1 validation",
        "params": {
          "messageData": "Data of the message being sent"
        }
      },
      "sendL2MessageFromOrigin(bytes)": {
        "details": "This method is an optimization to avoid having to emit the entirety of the messageData in a log. Instead validators are expected to be able to parse the data from the transaction's input",
        "params": {
          "messageData": "Data of the message being sent"
        }
      },
      "unsafeCreateRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)": {
        "details": "Same as createRetryableTicket, but does not guarantee that submission will succeed by requiring the needed funds come from the deposit alone, rather than falling back on the user's L2 balanceAdvanced usage only (does not rewrite aliases for excessFeeRefundAddress and callValueRefundAddress). createRetryableTicket method is the recommended standard.Gas limit and maxFeePerGas should not be set to 1 as that is used to trigger the RetryableData error",
        "params": {
          "callValueRefundAddress": "l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled",
          "data": "ABI encoded data of L2 message",
          "excessFeeRefundAddress": "gasLimit x maxFeePerGas - execution cost gets credited here on L2 balance",
          "gasLimit": "Max gas deducted from user's L2 balance to cover L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)",
          "l2CallValue": "call value for retryable L2 message",
          "maxFeePerGas": "price bid for L2 execution. Should not be set to 1 (magic value used to trigger the RetryableData error)",
          "maxSubmissionCost": "Max gas deducted from user's L2 balance to cover base submission fee",
          "to": "destination L2 contract address"
        },
        "returns": {
          "_0": "unique message number of the retryable transaction"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "calculateRetryableSubmissionFee(uint256,uint256)": {
        "notice": "Get the L1 fee for submitting a retryable"
      },
      "createRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)": {
        "notice": "Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts"
      },
      "depositEth()": {
        "notice": "Deposit eth from L1 to L2 to address of the sender if sender is an EOA, and to its aliased address if the sender is a contract"
      },
      "pause()": {
        "notice": "pauses all inbox functionality"
      },
      "sendL2Message(bytes)": {
        "notice": "Send a generic L2 message to the chain"
      },
      "sendL2MessageFromOrigin(bytes)": {
        "notice": "Send a generic L2 message to the chain"
      },
      "unpause()": {
        "notice": "unpauses all inbox functionality"
      },
      "unsafeCreateRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)": {
        "notice": "Put a message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts"
      }
    },
    "version": 1
  }
}