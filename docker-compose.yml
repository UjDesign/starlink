version: '3.8'  # 兼容docker compose v2

services:
  # MongoDB服务
  mongodb:
    image: mongo:latest
    container_name: starlink-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "-u", "${MONGO_USERNAME}", "-p", "${MONGO_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3

  # IPFS节点
  ipfs:
    image: ipfs/kubo:v0.27.0  # 最新稳定版
    container_name: starlink-ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"  # IPFS网关
    volumes:
      - ipfs-data:/data/ipfs

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: starlink-backend
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - IPFS_URL=http://ipfs:5001
      - CONTENT_NFT_ADDRESS=${CONTENT_NFT_ADDRESS}
      - STAR_TOKEN_ADDRESS=${STAR_TOKEN_ADDRESS}
      - PROVIDER_URL=${PROVIDER_URL}
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
      ipfs:
        condition: service_started

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: starlink-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  mongo-data:
  ipfs-data:
